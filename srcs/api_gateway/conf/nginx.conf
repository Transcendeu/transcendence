events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream pong_frontend {
        server frontend:80;
    }

    upstream auth_service {
        server auth:4001;
    }

    upstream pong_ws_relay {
        server relay:4002;
    }


    upstream game-history {
		  	server game-history:4003;
	  }

    upstream database {
        server database:5000;
    }

    ##################################################
    # HTTP Block – Redirect everything to HTTPS
    ##################################################
    server {
        listen 80;
        server_name dukong.net;

        return 301 https://$host$request_uri;
    }

    ##################################################
    # HTTPS Block – Actual secure serving
    ##################################################
    server {
        listen 443 ssl;
        server_name dukong.net;

        ssl_certificate     /etc/nginx/certs/dukong.net.crt;
        ssl_certificate_key /etc/nginx/certs/dukong.net.key;

        # WebSocket support
        location /ws {
            proxy_pass http://pong_ws_relay;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400s;
        }

        location /session {
            proxy_pass http://pong_ws_relay;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /join {
            proxy_pass http://pong_ws_relay;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /current {
            proxy_pass http://pong_ws_relay;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/auth/ {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/database {
            rewrite ^/api/database(.*) /$1 break;
            proxy_pass http://database;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /games/ {
            # CORS Headers - START
            # Allow requests from your frontend origin (localhost:8443)
            add_header 'Access-Control-Allow-Origin' 'https://localhost:8443' always;
            # Allow common methods for your API
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            # Allow common headers, including 'Content-Type' and 'Authorization' if you send tokens
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            # Allow credentials (cookies, HTTP authentication) to be sent with the request
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            # Max-Age for preflight requests (how long browser can cache CORS preflight result)
            add_header 'Access-Control-Max-Age' 3600 always;

            # Handle OPTIONS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://localhost:8443' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 3600 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204; # No Content, successful preflight
            }
            # CORS Headers - END

            proxy_pass         http://game-history;
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass http://pong_frontend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
