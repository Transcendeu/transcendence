version: '3.8'

services:

  vault:
    image: hashicorp/vault:1.16
    container_name: vault
    environment:
      # Modo dev – NUNCA usar em produção!
      VAULT_DEV_ROOT_TOKEN_ID: root-token
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    cap_add:            # evita que o Vault seja swapado em disco
      - IPC_LOCK
    networks:
      - transcendence_network

  vault-container:
    build: ./srcs/vault
    container_name: fastify-api
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root-token
      JWT_KEY: signing_key
      JWT_VALUE: 8b1d0fcfa4f6b0e8d63f6ac68f31a9c6d6d94f3a98b74c7c21ec5f4a02dd94a8
      PORT: 3082
    depends_on:
      - vault
    ports:
      - "3082:3082"  # testando local
    networks:
      - transcendence_network

  database:
    build:
      context: ./srcs/database
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./srcs/database:/app
      - ./data:/app/data
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_REFRESH_SECRET=your_jwt_refresh_secret_key_here
    # env_file:
    #   - ./srcs/database/.env
    networks:
      - transcendence_network

  auth:
    build:
      context: ./srcs/auth
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DATABASE_URL=http://database:5000
      - JWT_SECRET=jwt_secret
      - JWT_REFRESH_SECRET=jwt_refresh
    env_file:
      - ./srcs/auth/.env
    networks:
      - transcendence_network

  api-gateway:
    build:
      context: ./srcs/api_gateway
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - auth
    networks:
      - transcendence_network

  frontend:
    build:
      context: ./srcs/frontend
      dockerfile: Dockerfile
    networks:
      - transcendence_network

  web-nginx:
    build:
      context: ./srcs/web_nginx
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - frontend
    networks:
      - transcendence_network

networks:
  transcendence_network:
    driver: bridge